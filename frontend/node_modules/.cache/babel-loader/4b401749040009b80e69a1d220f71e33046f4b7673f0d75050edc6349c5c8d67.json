{"ast":null,"code":"var _jsxFileName = \"/Users/jayasuryasgp/Documents/PixelForgeNexus/frontend/src/components/UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadFile() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [projectId, setProjectId] = useState('');\n  const handleUpload = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('projectId', projectId);\n    try {\n      await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('File uploaded!');\n    } catch (err) {\n      alert('Upload failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Project ID\",\n        onChange: e => setProjectId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 88\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadFile, \"iFvtHDjgfCZcjgWQq/TH4It0h94=\");\n_c = UploadFile;\nexport default UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadFile","_s","file","setFile","projectId","setProjectId","handleUpload","e","preventDefault","token","localStorage","getItem","formData","FormData","append","post","headers","Authorization","alert","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","type","files","_c","$RefreshReg$"],"sources":["/Users/jayasuryasgp/Documents/PixelForgeNexus/frontend/src/components/UploadFile.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadFile() {\n  const [file, setFile] = useState(null);\n  const [projectId, setProjectId] = useState('');\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('projectId', projectId);\n    try {\n      await axios.post('http://localhost:5000/api/files/upload', formData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      alert('File uploaded!');\n    } catch (err) {\n      alert('Upload failed');\n    }\n  };\n\n  return (\n    <div>\n      <h3>Upload File</h3>\n      <form onSubmit={handleUpload}>\n        <input placeholder=\"Project ID\" onChange={e => setProjectId(e.target.value)} /><br />\n        <input type=\"file\" onChange={e => setFile(e.target.files[0])} /><br />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n}\n\nexport default UploadFile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAC7BU,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEV,SAAS,CAAC;IACvC,IAAI;MACF,MAAMP,KAAK,CAACkB,IAAI,CAAC,wCAAwC,EAAEH,QAAQ,EAAE;QACnEI,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAC9C,CAAC,CAAC;MACFS,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZD,KAAK,CAAC,eAAe,CAAC;IACxB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA;MAAM0B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3BrB,OAAA;QAAO2B,WAAW,EAAC,YAAY;QAACC,QAAQ,EAAEpB,CAAC,IAAIF,YAAY,CAACE,CAAC,CAACqB,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAzB,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrFzB,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACH,QAAQ,EAAEpB,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACqB,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAzB,OAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtEzB,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvB,EAAA,CA9BQD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}